version: '3.8'

volumes:
  postgres_data:
  static:
  media:
  state:

services:
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.6.2
    environment:
      - discovery.type=${DISCOVERY_TYPE}
      - bootstrap.memory_lock=${BOOTSTRAP_MEMORY_LOCK}
      - xpack.security.enabled=${XPACK_SECURITY_ENABLED}
      - xpack.security.http.ssl.enabled=${XPACK_SECURITY_HTTP_SSL_ENABLED}
      - ELASTIC_PASSWORD=${ELASTIC_PASSWORD}
    ports:
      - ${ES_PORT}:${ES_PORT}
    healthcheck:
      test: |
        curl -fs -u ${ELASTIC_USER}:${ELASTIC_PASSWORD} http://localhost:9200/_cluster/health |
        grep -E '"status":"(yellow|green)"' || exit 1
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 20s

  theatre-db:
    image: postgres:13-alpine
    volumes:
      - ./project/simple_project/database_dump.sql:/docker-entrypoint-initdb.d/init.sql
      - postgres_data:/var/lib/postgresql/data
    env_file:
      - .env
    ports:
      - ${SQL_PORT}:${SQL_PORT}

  service:
    build:
      context: ./
      dockerfile: ./project/simple_project/app/Dockerfile
    volumes:
      - static:/opt/app/static
      - media:/opt/app/media
    env_file:
      - .env
    depends_on:
      - theatre-db

  etl:
    build:
      context: ./
      dockerfile: ./etl/Dockerfile
    env_file:
      - .env
    volumes:
      - state:/etl/state
    depends_on:
      theatre-db:
        condition: service_started
      elasticsearch:
        condition: service_healthy
      service:
        condition: service_started
